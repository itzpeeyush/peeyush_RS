from remove import remove_duplicate_values


1.
def word(str):
    cat_count = str.count("cat")
    hat_count = str.count("hat")
    if cat_count == hat_count:
        return True
    else:
        return False

str = "cat hat cat"
print(word(str))

str = "cat hat hat cat"
print(word(str)) 

str = "cat wearing a hat"
print(word(str))



2.
n = int(input("Enter a natural number:"))
for i in range(1, n+1 ):
        sum_squares = sum(j**2 for j in range(1, i+1))
        print(sum_squares)



3.
num = int(input("Enter a positive integer: "))
sum = 0
i = 1

while i <= num:
    sum += i   
    i += 1  

print("The sum of the first", num, "numbers is:", sum)



4.
L = {'a': [1, 2, 3], 'b': [3, 4, 5], 'c': [5, 6, 1,7]}
M = remove_duplicate_values(L)
print(M)


5.
def character(s):
    number  = {}
    for char in s:
        number[char] = number.get(char, 0) + 1
    return number

i= input("Enter a string: ")
r= character(i)
print("number of times character repeat:", r)


7.
n = int(input("Enter a number: "))

if n > 0 and (n & (n - 1)) == 0:
    print(n, "is a power of 2")
else:
    print(n, "is not a power of 2")



8.
def are_elements_unique(list):
   
    return len(list) == len(set(list))

list = [1, 2, 3, 4, 5, 6,6]
print(len(list) == len(set(list))) 


9.

a1 = [1, 2, 3, 4, 5]
a2 = [1, 2, 3, 4,]

def missing_element (a1,a2):
    s1 = set(a1)
    s2 = set(a2)
    if len(s1) != len(s2):
        difference = s1 - s2 if len(s1) > len(s2) else s2 - s1
        return difference.pop() if len(difference) == 1 else None
    return None


missing = missing_element (a1, a2)
print(f"The missing is: {missing}")



10.
t1 = [(1, 2), (3, 4), (5, 6)]
t2 = [(b, a) for a, b in t1]
print(t2)  

